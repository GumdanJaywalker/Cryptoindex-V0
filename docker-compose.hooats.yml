version: '3.8'

services:
  # Redis 서버 (오더북 매칭 엔진용)
  redis:
    image: redis:7-alpine
    container_name: hyperindex-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-hyperindex_secure_password}
    restart: unless-stopped
    networks:
      - hyperindex-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-hyperindex_secure_password}", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # HOOATS Standalone API Server
  hooats-api:
    build:
      context: .
      dockerfile: Dockerfile.standalone
    container_name: hyperindex-hooats-api
    ports:
      - "3000:3000"
    environment:
      # Redis 설정 (Docker 네트워크 내부)
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=hyperindex_secure_password
      - REDIS_URL=redis://:hyperindex_secure_password@redis:6379
      
      # Supabase 설정
      - NEXT_PUBLIC_SUPABASE_URL=https://xozgwidnikzhdiommtwk.supabase.co
      - SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inhvemd3aWRuaWt6aGRpb21tdHdrIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MTQ0NDQ3NCwiZXhwIjoyMDY3MDIwNDc0fQ.8xpmJmJswbU88o6lziy0g8XOcoKySybSFD0ezNO44A
      
      # HyperEVM 설정
      - HYPERVM_TESTNET_RPC=https://rpc.hyperliquid-testnet.xyz/evm
      - HYPERVM_TESTNET_CHAIN_ID=998
      - NEXT_PUBLIC_CHAIN_ID=998
      - NEXT_PUBLIC_RPC_URL=https://rpc.hyperliquid-testnet.xyz/evm
      
      # 컨트랙트 주소
      - NEXT_PUBLIC_FACTORY_ADDRESS=0x73bF19534DA1c60772E40136A4e5E77921b7a632
      - NEXT_PUBLIC_ROUTER_ADDRESS=0xD70399962f491c4d38f4ACf7E6a9345B0B9a3A7A
      - NEXT_PUBLIC_HYPERINDEX_ADDRESS=0x6065Ab1ec8334ab6099aF27aF145411902EAef40
      - NEXT_PUBLIC_USDC_ADDRESS=0x53aE8e677f34BC709148085381Ce2D4b6ceA1Fc3
      - NEXT_PUBLIC_PAIR_ADDRESS=0x5706084ad9Cac84393eaA1Eb265Db9b22bA63cd1
      
      # 개발 설정
      - NODE_ENV=development
      - DISABLE_RATE_LIMIT=true
      - API_BASE_URL=http://localhost:3000/api
      
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - hyperindex-network
    volumes:
      # 개발시 코드 변경사항을 실시간 반영 (선택사항)
      - ./lib:/app/lib
      - ./standalone-api-mock.cjs:/app/standalone-api-mock.cjs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis Commander (Redis GUI 관리 도구) - 선택사항
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: hyperindex-redis-commander
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379:0:hyperindex_secure_password
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - hyperindex-network
    profiles:
      - tools  # 필요시에만 실행: docker-compose --profile tools up

volumes:
  redis_data:
    driver: local

networks:
  hyperindex-network:
    driver: bridge